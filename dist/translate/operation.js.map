{"version":3,"sources":["src/translate/operation.js"],"names":[],"mappings":";;;;;;;;;;;;qBAgBS,kBAAkB;;kBAdZ,IAAI;;;;sBACA,QAAQ;;;;0BAGJ,gBAAgB;;;;2BACf,iBAAiB;;;;+BAE3B,oBAAoB;;;;AALlC,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;AAY/B,SAAS,kBAAkB,CAAC,IAAkB,EAAiB;AAC3D,6BAAO,IAAI,CAAC,IAAI,KAAK,WAAW,oCACI,IAAI,CAAC,IAAI,CAAG,CAAC;AACjD,6BAAO,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAA,AAAC,EAAE,gDAAgD,CAAC,CAAC;;AAExF,QAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,QAAI,IAAI,CAAC,MAAM,EAAE;AACb,iCAAO,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAClC,YAAI,GAAG,8BAAY,IAAI,CAAC,CAAC;KAC5B;;AAED,QAAI,IAAI,CAAC,IAAI,EAAE;AACX,YAAI,IAAI,EACJ,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6BAAE,aAAa,CAAC,CAAC,CAAC;AACjD,YAAI,GAAG,gBAAG,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,gBAAG,UAAU,CAAC,KAAK,EAAE,EAAE,6BAAW,IAAI,CAAC,CAAC,CAAC;KAChF;;AAGD,WAAO,IAAI,IAAI,gBAAG,UAAU,CAAC,KAAK,EAAE,CAAC;CACxC","file":"src/translate/operation.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\nimport assert from 'assert';\r\nvar literal = Rx.Observable.of;\r\n\r\nimport emitMethod from '../emit/method';\r\nimport emitIndexer from '../emit/indexer';\r\n\r\nimport t from '../FormattingToken';\r\n\r\nexport\r\ndefault\r\n\r\nfunction translateOperation(node: IdlOperation): Rx.Observable {\r\n    assert(node.type === 'operation',\r\n        `Expected IdlOperation, found ${node.type}`);\r\n    assert(!(node.getter && node.setter), 'operation cannot be both a getter and a setter');\r\n\r\n    var decl = null;\r\n\r\n    if (node.getter) {\r\n        assert(node.arguments.length > 0);\r\n        decl = emitIndexer(node);\r\n    }\r\n\r\n    if (node.name) {\r\n        if (decl)\r\n            decl = decl.concat(literal(t.newlineIndent));\r\n        decl = Rx.Observable.concat(decl || Rx.Observable.empty(), emitMethod(node));\r\n    }\r\n\r\n\r\n    return decl || Rx.Observable.empty();\r\n}"]}