{"version":3,"sources":["src/translate/operation.js"],"names":[],"mappings":";;;;;;;;;;;;qBAgBS,kBAAkB;;kBAdZ,IAAI;;;;sBACA,QAAQ;;;;0BAGJ,gBAAgB;;;;2BACf,iBAAiB;;;;+BAE3B,oBAAoB;;;;AALlC,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;AAY/B,SAAS,kBAAkB;;;8BAAoC;YAAnC,IAAkB;AAmBtC,YAAI;;;AAlBR,iCAAO,IAAI,CAAC,IAAI,KAAK,WAAW,oCACI,IAAI,CAAC,IAAI,CAAG,CAAC;AACjD,iCAAO,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAA,AAAC,EAAE,gDAAgD,CAAC,CAAC;;AAExF,YAAI,IAAI,CAAC,IAAI,EACT,OAAO,6BAAW,IAAI,CAAC,CAAC;AAC5B,YAAI,IAAI,CAAC,MAAM,EACX,OAAO,8BAAY,IAAI,CAAC,CAAC;AAC7B,YAAI,IAAI,CAAC,MAAM,EACX,OAAO,gBAAG,UAAU,CAAC,KAAK,EAAE,CAAC;AACjC,YAAI,IAAI,CAAC,WAAW;iBACU;AACtB,oBAAI,EAAE,WAAW;AACjB,oBAAI,EAAE,UAAU;AAChB,yBAAS,EAAE,EAAE;AACb,uBAAO,EAAE,WAAW;aACvB;;;SAAE;;AAEP,YAAI,IAAI,GAAG,WAAW,CAAC;AACvB,YAAI,IAAI,CAAC,OAAO,EACZ,IAAI,GAAG,SAAS,CAAC;AACrB,YAAI,IAAI,CAAC,OAAO,EACZ,IAAI,GAAG,SAAS,CAAC;AACrB,YAAI,IAAI,CAAC,YAAY,EACjB,IAAI,GAAG,cAAc,CAAC;AAC1B,eAAO,OAAO,CAAC,6BAAE,YAAY,EAAE,mBAAmB,EAAE,IAAI,EAAE,6BAAE,WAAW,CAAC,CAAC;KAE5E;CAAA","file":"src/translate/operation.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\nimport assert from 'assert';\r\nvar literal = Rx.Observable.of;\r\n\r\nimport emitMethod from '../emit/method';\r\nimport emitIndexer from '../emit/indexer';\r\n\r\nimport t from '../FormattingToken';\r\n\r\nexport\r\ndefault\r\n\r\nfunction translateOperation(node: IdlOperation): Rx.Observable {\r\n    assert(node.type === 'operation',\r\n        `Expected IdlOperation, found ${node.type}`);\r\n    assert(!(node.getter && node.setter), 'operation cannot be both a getter and a setter');\r\n\r\n    if (node.name)\r\n        return emitMethod(node);\r\n    if (node.getter)\r\n        return emitIndexer(node);\r\n    if (node.setter)\r\n        return Rx.Observable.empty();\r\n    if (node.stringifier)\r\n        return translateOperation({\r\n            type: 'operation',\r\n            name: 'toString',\r\n            arguments: [],\r\n            idlType: 'DOMString'\r\n        });\r\n\r\n    var what = \"operation\";\r\n    if (node.creator)\r\n        what = \"creator\";\r\n    if (node.deleter)\r\n        what = \"deleter\";\r\n    if (node.legacycaller)\r\n        what = \"legacycaller\";\r\n    return literal(t.enterComment, 'Not implemented: ', what, t.exitComment);\r\n\r\n}"]}