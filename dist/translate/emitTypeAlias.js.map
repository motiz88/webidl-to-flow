{"version":3,"sources":["src/translate/emitTypeAlias.js"],"names":[],"mappings":";;;;;;;;;;;;qBAcS,aAAa;;kBAZP,IAAI;;;;oBAKO,QAAQ;;;;;;AAFlC,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;AAS/B,SAAS,aAAa,CAAC,IAA+C,EAAiB;AACnF,WAAO,gBAAG,UAAU,CAAC,MAAM,CAC1B,OAAO,WAAS,IAAI,CAAC,IAAI,SAAM,EAC5B,uBAAc,IAAI,CAAC,OAAO,CAAC,EAC3B,OAAO,CAAC,GAAG,CAAC,CACf,CAAC;CACL","file":"src/translate/emitTypeAlias.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\n// import notImplemented from './notImplemented';\r\n\r\nvar literal = Rx.Observable.of;\r\n\r\nimport translateType from './type';\r\n\r\nexport\r\ndefault\r\n\r\nfunction emitTypeAlias(node: {name: string, idlType: IdlType | string}): Rx.Observable {\r\n    return Rx.Observable.concat(\r\n    \tliteral(`type ${node.name} = `),\r\n        translateType(node.idlType),\r\n        literal(';')\r\n    );\r\n}"]}