{"version":3,"sources":["src/translate/extAttrs.js"],"names":[],"mappings":";;;;;;;;;;;;qBAWS,iBAAiB;;kBATX,IAAI;;;;2BACK,iBAAiB;;;;AACzC,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;AAO/B,SAAS,iBAAiB;;;8BAER;YAFS,IAE1B;;;AACG,YAAI,IAAI,CAAC,QAAQ;iBACY,IAAI,CAAC,QAAQ;;;SAAE;;AAE5C,YAAI,CAAC,IAAI,CAAC,MAAM,EACZ,OAAO,gBAAG,UAAU,CAAC,KAAK,EAAE,CAAC;;AAEjC,eAAO,OAAO,CAAC,MAAM,CAAC,CACjB,MAAM,CAAC,gBAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAC3B,SAAS,CAAC,UAAA,OAAO;mBACd,gBAAG,UAAU,CAAC,MAAM,CAAC,8BAAY,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;SAAA,CAC5D,CAAC,QAAQ,CAAC,CAAC,CAAC,EACb,OAAO,CAAC,MAAM,CAAC,CAClB,CAAC;KACT;CAAA","file":"src/translate/extAttrs.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\nimport emitExtAttr from '../emit/extAttr';\r\nvar literal = Rx.Observable.of;\r\n\r\nexport\r\ndefault\r\n\r\nfunction translateExtAttrs(node: Array < IdlExtAttr > | {\r\n    extAttrs: Array < IdlExtAttr >\r\n}): Rx.Observable {\r\n    if (node.extAttrs)\r\n        return translateExtAttrs(node.extAttrs);\r\n\r\n    if (!node.length)\r\n        return Rx.Observable.empty();\r\n\r\n    return literal('/* [')\r\n        .concat(Rx.Observable.from(node)\r\n            .concatMap(subnode =>\r\n                Rx.Observable.concat(emitExtAttr(subnode), literal(', '))\r\n            ).skipLast(1),\r\n            literal('] */')\r\n        );\r\n}"]}