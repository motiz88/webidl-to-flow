{"version":3,"sources":["src/translate/argument.js"],"names":[],"mappings":";;;;;;;;;;;;qBAoBS,iBAAiB;;kBAlBX,IAAI;;;;;;oBAEO,QAAQ;;;;wBACJ,YAAY;;;;2BAClB,gBAAgB;;;;8BACb,oBAAoB;;;;AAE/C,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;AAE/B,SAAS,eAAe,CAAC,OAAO,EAAE;AACjC,WAAO,EAAC,KAAK,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,KAAK,CAAC,EAAE,OAAO,EAAP,OAAO,EAAC,CAAC;CACnD;;AAOD,SAAS,iBAAiB,CAAC,IAAiB,EAAiB;AACzD,WAAO,gBAAG,UAAU,CAAC,MAAM,CAC1B,8BAAY,2BAAkB,IAAI,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EACpD,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,EAAE,CAAC,EACnC,iCAAe,IAAI,CAAC,IAAI,CAAC,EACzB,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,EAClC,OAAO,CAAC,IAAI,CAAC,EACb,uBAAc,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAC9E,CAAC;CACL","file":"src/translate/argument.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\n// import assert from 'assert';\r\nimport translateType from './type';\r\nimport translateExtAttrs from './extAttrs';\r\nimport concatIfAny from '../concatIfAny';\r\nimport emitIdentifier from '../emit/identifier';\r\n\r\nvar literal = Rx.Observable.of;\r\n\r\nfunction wrapInArrayType(idlType) {\r\n\treturn {array: 1, nullableArray: [false], idlType};\r\n}\r\n\r\nexport\r\ndefault\r\n\r\nfunction translateArgument(node: IdlArgument): Rx.Observable {\r\n    return Rx.Observable.concat(\r\n    \tconcatIfAny(translateExtAttrs(node, ' '), literal(' ')),\r\n        literal(node.variadic ? '...' : ''),\r\n        emitIdentifier(node.name),\r\n        literal(node.optional ? '? ' : ''),\r\n        literal(': '),\r\n        translateType(node.variadic ? wrapInArrayType(node.idlType) : node.idlType)\r\n    );\r\n}\r\n"]}