{"version":3,"sources":["src/translate/interfaceMember.js"],"names":[],"mappings":";;;;;;;;;;;;qBAgBS,wBAAwB;;sBAdd,QAAQ;;;;8BACG,kBAAkB;;;;yBACjB,aAAa;;;;;;wBAEd,YAAY;;;;yBACX,aAAa;;;;uBACf,WAAW;;;;;;AAQxC,SAAS,wBAAwB,CAAC,IAAwB,EAAiB;AACvE,6BAAO,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,0CACjI,IAAI,CAAC,IAAI,CAAG,CAAC;AACvD,YAAQ,IAAI,CAAC,IAAI;AACb,aAAK,UAAU;AACX,mBAAO,iCAAmB,IAAI,CAAe,CAAC;AAAA,AAClD,aAAK,WAAW;AACZ,mBAAO,4BAAoB,IAAI,CAAgB,CAAC;AAAA,AACpD,aAAK,YAAY;AACb,mBAAO,iCAAqB,IAAI,CAAiB,CAAC;AAAA,AACtD,aAAK,OAAO;AACR,mBAAO,2BAAmB,IAAI,CAAe,CAAC;AAAA,AAClD,aAAK,WAAW;AACZ,mBAAO,4BAAoB,IAAI,CAAgB,CAAC;AAAA,AACpD,aAAK,SAAS;AACV,mBAAO,0BAAkB,IAAI,CAAc,CAAC;AAAA,AAChD;AACI,mBAAO,iCAAe,IAAI,CAAC,CAAC;AAAA,KACnC;;CAEJ","file":"src/translate/interfaceMember.js","sourcesContent":["/* @flow */\r\n\r\nimport assert from 'assert';\r\nimport translateIterator from './notImplemented';\r\nimport translateOperation from './operation';\r\nimport translateSerializer from './notImplemented';\r\nimport translateConstant from './constant';\r\nimport translateAttribute from './attribute';\r\nimport translateTypedef from './typedef';\r\nimport notImplemented from './notImplemented';\r\n\r\nexport\r\ndefault\r\n\r\nfunction translateInterfaceMember(node: IdlInterfaceMember): Rx.Observable {\r\n    assert(node.type === 'iterator' || node.type === 'operation' || node.type === 'serializer' || node.type === 'const' || node.type === 'attribute' || node.type === 'typedef',\r\n        `Expected IdlInterfaceMember, found ${node.type}`);\r\n    switch (node.type) {\r\n        case 'iterator':\r\n            return translateIterator((node: IdlIterator));\r\n        case 'operation':\r\n            return translateOperation((node: IdlOperation));\r\n        case 'serializer':\r\n            return translateSerializer((node: IdlSerializer));\r\n        case 'const':\r\n            return translateConstant((node: IdlConstant));\r\n        case 'attribute':\r\n            return translateAttribute((node: IdlAttribute));\r\n        case 'typedef':\r\n            return translateTypedef((node: IdlTypedef));\r\n        default:\r\n            return notImplemented(node);\r\n    }\r\n    //IdlIterator | IdlOperation | IdlSerializer | IdlConstant;\r\n}"]}