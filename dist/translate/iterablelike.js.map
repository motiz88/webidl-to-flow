{"version":3,"sources":["src/translate/iterablelike.js"],"names":[],"mappings":";;;;;;;;;;;;qBAeS,qBAAqB;;kBAbf,IAAI;;;;sBACA,QAAQ;;;;8BAGA,kBAAkB;;;;+BAE/B,oBAAoB;;;;AAJlC,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;AAW/B,SAAS,qBAAqB,CAAC,IAAqB,EAAiB;AACjE,6BAAO,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,IAAI,KAAK,gBAAgB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,uCAChF,IAAI,CAAC,IAAI,CAAG,CAAC;;AAEpD,WAAO,iCAAe,IAAI,CAAC,CAAC;CAC/B","file":"src/translate/iterablelike.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\nimport assert from 'assert';\r\nvar literal = Rx.Observable.of;\r\n\r\nimport notImplemented from './notImplemented';\r\n\r\nimport t from '../FormattingToken';\r\n\r\nexport\r\ndefault\r\n\r\nfunction translateIterablelike(node: IdlIterablelike): Rx.Observable {\r\n    assert(node.type === 'iterable' || node.type === 'legacyiterable' || node.type === 'setlike' || node.type === 'maplike',\r\n        `Expected IdlIterablelike, found ${node.type}`);\r\n\r\n    return notImplemented(node);\r\n}"]}