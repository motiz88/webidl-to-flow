{"version":3,"sources":["src/translateIdlAst.js"],"names":[],"mappings":";;;;;;;;;;;;qBAYS,eAAe;;kBAVT,IAAI;;;;6BACO,kBAAkB;;;;6BAClB,iBAAiB;;;;iCACb,qBAAqB;;;;AAOnD,SAAS,eAAe,CAAC,GAAgB,EAAiB;AACtD,WAAO,gCAAc,gBAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CACxC,SAAS,CAAC,UAAA,IAAI;eAAI,gCAAc,IAAI,CAAC,CAAC,MAAM,CAAC,gBAAG,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;KAAA,CAAC,OACpE,gCAAmB,CAAC;CAC/B","file":"src/translateIdlAst.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\nimport translateRoot from './translate/root';\r\nimport preprocessAst from './preprocessAst';\r\nimport postprocessTokens from './postprocessTokens';\r\n\r\nexport\r\ndefault\r\n\r\nfunction translateIdlAst(ast: IdlAstArray): Rx.Observable {\r\n    return preprocessAst(Rx.Observable.from(ast))\r\n        .concatMap(root => translateRoot(root).concat(Rx.Observable.of('\\n\\n')))\r\n        .let(postprocessTokens);\r\n}"]}