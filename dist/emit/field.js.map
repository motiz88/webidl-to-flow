{"version":3,"sources":["src/emit/field.js"],"names":[],"mappings":";;;;;;;;;;;;qBAYS,SAAS;;6BAVQ,mBAAmB;;;;kBAC9B,IAAI;;;;AAEnB,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;AAO/B,SAAS,SAAS,CAAC,IAAwD,EAAiB;AACxF,WAAO,gBAAG,UAAU,CAAC,MAAM,CAC1B,OAAO,CAAC,IAAI,UAAO,GAAG,SAAS,GAAG,EAAE,CAAC,EAClC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAClB,OAAO,CAAC,IAAI,CAAC,EACb,gCAAc,IAAI,CAAC,OAAO,CAAC,EAC3B,OAAO,CAAC,GAAG,CAAC,CACf,CAAC;CACL","file":"src/emit/field.js","sourcesContent":["/* @flow */\r\n\r\nimport translateType from '../translate/type';\r\nimport Rx from 'rx';\r\n\r\nvar literal = Rx.Observable.of;\r\n\r\nexport\r\ndefault\r\n\r\nfunction emitField(node: {name: string, idlType: IdlType, static?: boolean}): Rx.Observable {   \r\n    return Rx.Observable.concat(\r\n    \tliteral(node.static ? 'static ' : ''),\r\n        literal(node.name),\r\n        literal(': '),\r\n        translateType(node.idlType),\r\n        literal(';')\r\n    );\r\n}"]}