{"version":3,"sources":["src/emit/identifier.js"],"names":[],"mappings":";;;;;;;;;;;;qBAYS,cAAc;;kBAVR,IAAI;;;;AACnB,IAAI,OAAO,GAAG,gBAAG,UAAU,CAAC,EAAE,CAAC;;;;AAS/B,SAAS,cAAc,CAAC,IAAY,EAAE,OAAkC,EAAiB;AACxF,MAAI,YAAY,GAAG,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,YAAY,CAAC;AAClF,MAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAChC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,KACjB;AACJ,QAAI,YAAY,EACf,MAAM,IAAI,KAAK,iBAAe,IAAI,8CAA2C,CAAC;AAC/E,WAAO,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;GAC3B;CACD;;AAED,IAAI,QAAQ,GAAG,CACb,UAAU,EACV,WAAW,EACX,SAAS,EACT,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACV,SAAS,EACT,QAAQ,EACR,IAAI,EACJ,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,QAAQ,EACR,SAAS,EACT,OAAO,EACP,OAAO,EACP,SAAS,EACT,OAAO,EACP,KAAK,EACL,UAAU,EACV,MAAM,EACN,IAAI,EACJ,YAAY,EACZ,QAAQ,EACR,IAAI,EACJ,YAAY,EACZ,KAAK,EACL,WAAW,EACX,KAAK,EACL,MAAM,EACN,QAAQ,EACR,KAAK,EACL,MAAM,EACN,SAAS,EACT,SAAS,EACT,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,cAAc,EACd,MAAM,EACN,OAAO,EACP,QAAQ,EACR,WAAW,EACX,MAAM,EACN,KAAK,EACL,QAAQ,EACR,KAAK,EACL,MAAM,EACN,UAAU,EACV,OAAO,EACP,MAAM,EACN,OAAO,CACR,CAAC","file":"src/emit/identifier.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\nvar literal = Rx.Observable.of;\r\n\r\n/* eslint no-use-before-define: 0 */\r\n\r\nexport\r\ndefault\r\n\r\nfunction emitIdentifier(name: string, options?: {forbidRename?: boolean}): Rx.Observable {\r\n\tvar forbidRename = options && typeof options === 'object' && options.forbidRename;\r\n\tif (reserved.indexOf(name) === -1)\r\n\t\treturn literal(name);\r\n\telse {\r\n\t\tif (forbidRename)\r\n\t\t\tthrow new Error(`Cannot use ${name} as an identifier here and cannot rename`);\r\n\t\treturn literal('_' + name);\r\n\t}\r\n}\r\n\r\nvar reserved = [\r\n  'abstract',\r\n  'arguments',\r\n  'boolean',\r\n  'break',\r\n  'byte',\r\n  'case',\r\n  'catch',\r\n  'char',\r\n  'class',\r\n  'const',\r\n  'continue',\r\n  'debugger',\r\n  'default',\r\n  'delete',\r\n  'do',\r\n  'double',\r\n  'else',\r\n  'enum',\r\n  'eval',\r\n  'export',\r\n  'extends',\r\n  'false',\r\n  'final',\r\n  'finally',\r\n  'float',\r\n  'for',\r\n  'function',\r\n  'goto',\r\n  'if',\r\n  'implements',\r\n  'import',\r\n  'in',\r\n  'instanceof',\r\n  'int',\r\n  'interface',\r\n  'let',\r\n  'long',\r\n  'native',\r\n  'new',\r\n  'null',\r\n  'package',\r\n  'private',\r\n  'protected',\r\n  'public',\r\n  'return',\r\n  'short',\r\n  'static',\r\n  'super',\r\n  'switch',\r\n  'synchronized',\r\n  'this',\r\n  'throw',\r\n  'throws',\r\n  'transient',\r\n  'true',\r\n  'try',\r\n  'typeof',\r\n  'var',\r\n  'void',\r\n  'volatile',\r\n  'while',\r\n  'with',\r\n  'yield'\r\n];\r\n"]}