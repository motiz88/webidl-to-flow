{"version":3,"sources":["src/preprocessAst/purgeNoInterfaceObjects.js"],"names":[],"mappings":";;;;;;;;;;qBAYS,uBAAuB;;kBAZjB,IAAI;;;;;;;;;;;AAYnB,SAAS,uBAAuB,CAAC,QAAuB,EAAiB;AACrE,WAAO,QAAQ,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK,EAAI;AACzC,aAAK,CAAC,OAAO,CACT,UAAA,IAAI,EAAI;AACJ,gBAAI,IAAI,CAAC,QAAQ,EAAE;AACf,oBAAI,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,OAAO;2BAAI,OAAO,CAAC,IAAI,KAAK,mBAAmB;iBAAA,CAAC,CAAC;AAC3F,oBAAI,cAAc,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;;;AAGhD,yBAAK,CAAC,MAAM,CAAC,UAAA,SAAS;+BAAI,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,WAAW,KAAK,IAAI,CAAC,IAAI;qBAAA,CAAC,CAClF,OAAO,CAAC,UAAA,SAAS,EAAI;AAClB,iCAAS,CAAC,WAAW,GAAG,IAAI,CAAC;qBAChC,CAAC,CAAC;iBACV;aACJ;SACJ,CACJ,CAAC;AACF,eAAO,gBAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpC,CAAC,CAAC;CACN","file":"src/preprocessAst/purgeNoInterfaceObjects.js","sourcesContent":["import Rx from 'rx';\r\n// import clone from 'clone';\r\n\r\n/// purgeNoInterfaceObjects converts types declared with [NoInterfaceObject]\r\n/// to typedefs (so Flow can correctly warn if they're used outside annotations).\r\n/// This requires that we remove them from inheritance clauses, so this step\r\n/// should run *after* propagateMembersThroughHierarchy which makes inheritance redundant.\r\nexport\r\ndefault\r\n\r\nfunction purgeNoInterfaceObjects(astRoots: Rx.Observable): Rx.Observable {\r\n    return astRoots.toArray().concatMap(roots => {\r\n        roots.forEach(\r\n            node => {\r\n                if (node.extAttrs) {\r\n                    var remainingAttrs = node.extAttrs.filter(subnode => subnode.name !== 'NoInterfaceObject');\r\n                    if (remainingAttrs.length !== node.extAttrs.length) {\r\n                        /// There's at least one [NoInterfaceObject] attached\r\n                        //node.extAttrs = remainingAttrs;\r\n                        roots.filter(otherNode => otherNode.inheritance && otherNode.inheritance === node.name)\r\n                            .forEach(otherNode => {\r\n                                otherNode.inheritance = null;\r\n                            });\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        return Rx.Observable.from(roots);\r\n    });\r\n}"]}