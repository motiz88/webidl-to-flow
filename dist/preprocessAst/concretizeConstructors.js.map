{"version":3,"sources":["src/preprocessAst/concretizeConstructors.js"],"names":[],"mappings":";;;;;;;;;;;;;;;qBAUS,sBAAsB;;qBATb,OAAO;;;;;;;AASzB,SAAS,sBAAsB,CAAC,QAAuB,EAAiB;AACpE,WAAO,QAAQ,CAAC,GAAG,CAAC,UAAA,IAAI,EAAI;AACxB,YAAI,QAAQ,GAAG,KAAK,CAAC;;AAErB,iBAAS,SAAS,GAAG;AACjB,gBAAI,CAAC,QAAQ,EAAE;AACX,oBAAI,GAAG,wBAAM,IAAI,CAAC,CAAC;AACnB,wBAAQ,GAAG,IAAI,CAAC;aACnB;SACJ;AACD,YAAI,IAAI,CAAC,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE;AACzD,gBAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CACxB,MAAM,CAAC,UAAA,IAAI;uBAAI,IAAI,CAAC,IAAI,KAAK,aAAa;aAAA,CAAC,CAAC;AACjD,gBAAI,SAAS,CAAC,MAAM,EAAE;;;AAClB,yBAAS,EAAE,CAAC;AACZ,oBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,IAAI;2BAAI,IAAI,CAAC,IAAI,KAAK,aAAa;iBAAA,CAAC,CAAC;AAC1E,iCAAA,IAAI,CAAC,OAAO,EAAC,OAAO,MAAA,mCAAI,SAAS,CAAC,GAAG,CAAC,UAAA,IAAI;2BAAI,eAAc;AACxD,4BAAI,EAAE,WAAW;qBACpB,EAAE,IAAI,EAAE;AACL,4BAAI,EAAE,aAAa;qBACtB,CAAC;iBAAA,CAAC,EAAC,CAAC;aACR;SACJ;AACD,eAAO,IAAI,CAAC;KACf,CAAC,CAAC;CACN","file":"src/preprocessAst/concretizeConstructors.js","sourcesContent":["//import Rx from 'rx';\r\nimport clone from 'clone';\r\n\r\n/// concretizeConstructors transforms [Constructor] attributes on interfaces and dictionaries\r\n/// into {type: 'operation', name: 'constructor'} member nodes.\r\nexport\r\ndefault\r\n\r\nfunction concretizeConstructors(astRoots: Rx.Observable): Rx.Observable {\r\n    return astRoots.map(root => {\r\n        var isCloned = false;\r\n\r\n        function cloneOnce() {\r\n            if (!isCloned) {\r\n                root = clone(root);\r\n                isCloned = true;\r\n            }\r\n        }\r\n        if (root.type === 'interface' || root.type === 'dictionary') {\r\n            var ctorAttrs = root.extAttrs\r\n                .filter(attr => attr.name === 'Constructor');\r\n            if (ctorAttrs.length) {\r\n                cloneOnce();\r\n                root.extAttrs = root.extAttrs.filter(attr => attr.name !== 'Constructor');\r\n                root.members.unshift(...ctorAttrs.map(attr => Object.assign({\r\n                    type: 'operation'\r\n                }, attr, {\r\n                    name: 'constructor'\r\n                })));\r\n            }\r\n        }\r\n        return root;\r\n    });\r\n}"]}